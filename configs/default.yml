description: cough detection | 3-layer CNN -> 3 FCN | flusense

model:
    name: classification
    type: binary
    batch_size: 128
    epochs: 200
    optimizer:
      name: Adam
      args:
        lr: 0.0001
    loss:
      train:
        name: cross-entropy
        params:
          reduction: none
      val:
        name: cross-entropy
        params:
          reduction: none
    classes:
      - non-cough
      - cough
    save:
        period: 200
        monitor: auc-roc
        monitor_mode: max
    load:
        version: null
        epoch: -1
        load_best: False
        resume_optimizer: false
    eval:
      maximize_metric: precision
      maximize_mode: val
      aggregate:
        train: {}
        val:
          method: median
          at: softmax
    subset_tracker:
      val: {}

network:
    name: neural_net
    params:
        config:
        # 0th convolutional block (Conv2d -> BN -> ReLU -> MaxPool2d)
        - name: Conv2d
          params:
            in_channels: 1
            out_channels: 64
            kernel_size: 3
            padding: 1
        - name: BatchNorm2d
          params:
            num_features: 64
        - name: ReLU
          params: {}
        - name: Conv2d
          params:
            in_channels: 64
            out_channels: 64
            kernel_size: 3
            padding: 1
        - name: BatchNorm2d
          params:
            num_features: 64
        - name: ReLU
          params: {}
        - name: Conv2d
          params:
            in_channels: 64
            out_channels: 64
            kernel_size: 3
            padding: 1
        - name: BatchNorm2d
          params:
            num_features: 64
        - name: ReLU
          params: {}
        - name: MaxPool2d
          params:
            kernel_size: 3
            stride: 2

        # 1st convolutional block (Conv2d -> BN -> ReLU -> MaxPool2d)
        - name: Conv2d
          params:
            in_channels: 64
            out_channels: 128
            kernel_size: 3
            padding: 1
        - name: BatchNorm2d
          params:
            num_features: 128
        - name: ReLU
          params: {}
        - name: Conv2d
          params:
            in_channels: 128
            out_channels: 128
            kernel_size: 3
            padding: 1
        - name: BatchNorm2d
          params:
            num_features: 128
        - name: ReLU
          params: {}
        - name: Conv2d
          params:
            in_channels: 128
            out_channels: 128
            kernel_size: 3
            padding: 1
        - name: BatchNorm2d
          params:
            num_features: 128
        - name: ReLU
          params: {}
        - name: MaxPool2d
          params:
            kernel_size: 3
            stride: 2

        # 2nd convolutional block (Conv2d -> BN -> ReLU -> MaxPool2d)
        - name: Conv2d
          params:
            in_channels: 128
            out_channels: 256
            kernel_size: 3
            padding: 1
        - name: BatchNorm2d
          params:
            num_features: 256
        - name: ReLU
          params: {}
        - name: Conv2d
          params:
            in_channels: 256
            out_channels: 256
            kernel_size: 3
            padding: 1
        - name: BatchNorm2d
          params:
            num_features: 256
        - name: ReLU
          params: {}
        - name: Conv2d
          params:
            in_channels: 256
            out_channels: 256
            kernel_size: 3
            padding: 1
        - name: BatchNorm2d
          params:
            num_features: 256
        - name: ReLU
          params: {}
        - name: MaxPool2d
          params:
            kernel_size: 3
            stride: 2

        # adaptive pooling to get N x NC x 1 x 1
        - name: AdaptiveAvgPool2d
          params:
            output_size:
            - 1
            - 1
        - name: Flatten
          params: {}

        # bunch of linear layers
        - name: Linear
          params:
            in_features: 256
            out_features: 128
        - name: ReLU
          params: {}
        - name: Linear
          params:
            in_features: 128
            out_features: 64
        - name: ReLU
          params: {}
        - name: Linear
          params:
            in_features: 64
            out_features: 2

data:
  raw_waveform: false

  # transforms undergone by labels
  target_transform:
    name: classification
    params:
      classes:
        - cough

  # transforms undergone by an audio signal
  signal_transform:
    train:
    - name: Resample
      params:
        orig_freq: 44100
        new_freq: 16000
    - name: RandomCrop
      params:
        crop_size: 32000
        pad_mode: zero
    - name: Spectrogram
      params:
        n_fft: 512
        win_length: 512
        hop_length: 160
    - name: MelScale
      params:
        n_mels: 64
        sample_rate: 16000
        f_min: 125
        f_max: 7500
    - name: AmplitudeToDB
      params: {}
    - name: Rescale
      params:
        value: 100
    - name: Unsqueeze
      params: {}

    val:
    - name: Resample
      params:
        orig_freq: 44100
        new_freq: 16000
    - name: RandomPad
      params:
        target_size: 32000
    - name: Spectrogram
      params:
        n_fft: 512
        win_length: 512
        hop_length: 160
    - name: MelScale
      params:
        n_mels: 64
        sample_rate: 16000
        f_min: 125
        f_max: 7500
    - name: AmplitudeToDB
      params: {}
    - name: Rescale
      params:
        value: 100
    - name: Unsqueeze
      params: {}

  # dataset object configuration
  dataset:
    name: classification_dataset
    config:
      - name: flusense
        version: segmented-v1.0
    params:
      train:
        fraction: 1.0
      val:
        as_frames: True
        frame_length: 2000
        min_length: 2000
        hop_length: 500
        fraction: 1.0

  # sampler to sample batch statistics
  sampler:
    train:
        name: default
    val:
        name: default
  collate_fn:
    name: classification_collate
    params: {}
